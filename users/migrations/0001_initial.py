# Generated by Django 5.1.7 on 2025-03-09 22:16

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('id_Es', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=255)),
                ('identifiant', models.CharField(max_length=100, unique=True)),
                ('disponibilites', models.JSONField(default=list)),
                ('modifications_ouvertes', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Filiere',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlageHoraire',
            fields=[
                ('id_plh', models.AutoField(primary_key=True, serialize=False)),
                ('heure_debut', models.TimeField(unique=True)),
                ('heure_fin', models.TimeField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Salle',
            fields=[
                ('id_sl', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Semaine',
            fields=[
                ('id_s', models.AutoField(primary_key=True, serialize=False)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('annee', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id_u', models.AutoField(primary_key=True, serialize=False)),
                ('login', models.CharField(max_length=255, unique=True)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('role', models.CharField(choices=[('professeur', 'professeur'), ('admin', 'admin'), ('directeur', 'directeur')], default='professeur', max_length=20)),
                ('groups', models.ManyToManyField(related_name='customuser_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='customuser_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Groupe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, unique=True)),
                ('semestre', models.CharField(choices=[('S1', 'Semestre 1'), ('S2', 'Semestre 2'), ('S3', 'Semestre 3'), ('S4', 'Semestre 4'), ('S5', 'Semestre 5')], max_length=2)),
                ('filiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groupes', to='users.filiere')),
            ],
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255, unique=True)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('semestre', models.IntegerField()),
                ('credits', models.FloatField()),
                ('coefficient', models.FloatField()),
                ('filiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matieres', to='users.filiere')),
            ],
        ),
        migrations.CreateModel(
            name='JourSemaine',
            fields=[
                ('id_jrs', models.AutoField(primary_key=True, serialize=False)),
                ('date_jour', models.DateField(unique=True)),
                ('semaine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.semaine')),
            ],
        ),
        migrations.CreateModel(
            name='AffectationEnseignant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_enseignement', models.CharField(choices=[('CM', 'Cours Magistral'), ('TD', 'Travaux Dirig√©s'), ('TP', 'Travaux Pratiques')], max_length=2)),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.enseignant')),
                ('filiere', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.filiere')),
                ('groupe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.groupe')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.matiere')),
            ],
            options={
                'unique_together': {('enseignant', 'matiere', 'type_enseignement', 'filiere', 'groupe')},
            },
        ),
        migrations.CreateModel(
            name='EmploiDuTemps',
            fields=[
                ('id_e', models.AutoField(primary_key=True, serialize=False)),
                ('heure_debut_cours', models.TimeField()),
                ('heure_fin_cours', models.TimeField()),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.enseignant')),
                ('groupe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.groupe')),
                ('jour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.joursemaine')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.matiere')),
                ('plage_horaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.plagehoraire')),
                ('salle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.salle')),
            ],
            options={
                'unique_together': {('groupe', 'plage_horaire', 'jour')},
            },
        ),
        migrations.CreateModel(
            name='ChargeHebdomadaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cm_heures', models.IntegerField(default=0)),
                ('td_heures', models.IntegerField(default=0)),
                ('tp_heures', models.IntegerField(default=0)),
                ('reconduite', models.BooleanField(default=False)),
                ('filiere', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.filiere')),
                ('groupe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.groupe')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.matiere')),
                ('semaine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.semaine')),
            ],
            options={
                'unique_together': {('semaine', 'matiere', 'filiere', 'groupe')},
            },
        ),
    ]
